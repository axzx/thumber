name: Testing

on: push

jobs:
    testing:
        name: Symfony (PHP ${{ matrix.php-versions }})
        runs-on: ubuntu-latest
        services:
            mysql:
                image: mysql:${{ matrix.mysql-versions }}
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: false
                    MYSQL_ROOT_PASSWORD: mysql
                    MYSQL_DATABASE: mysql
                ports:
                    - 3306/tcp
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        strategy:
            fail-fast: false
            matrix:
                php-versions: ['8.1']
                mysql-versions: ['8.0']
        steps:
            -   uses: actions/checkout@main
            -   name: Setup PHP, with composer and extensions
                uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
                with:
                    php-version: ${{ matrix.php-versions }}
                    extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, bcmath

            # —— Composer —————————————————————————————————————————————————————————
            -   name: Validate composer.json and composer.lock
                run: composer validate

            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache composer dependencies
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Install Composer dependencies
                run: composer install

            # —— Test —————————————————————————————————————————————————————————
            -   name: Run Tests
                run: php bin/phpunit
                env:
                    APP_ENV: test
                    DATABASE_URL: mysql://root:mysql@127.0.0.1:${{ job.services.mysql.ports[3306] }}/mysql?serverVersion=${{ matrix.mysql-versions }}
